on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write  # Needed to push commits and tags
  pull-requests: write  # Needed for releases
  issues: write  # Needed for releases


jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: "Install python dependencies"
      run: |
        pip install -r requirements.txt
      


    - name: Detect changed services
      id: changes
      run: |
        CHANGED_SERVICES=""
        
        if git rev-parse --verify ${{ github.sha }}^ >/dev/null 2>&1; then
          echo "Comparing ${{ github.sha }}^ to ${{ github.sha }}"
          COMPARE_RANGE="${{ github.sha }}^..${{ github.sha }}"
        else
          # First commit, compare against empty tree
          echo "First commit detected, comparing against empty tree"
          COMPARE_RANGE="4b825dc642cb6eb9a060e54bf8d69288fbee4904..${{ github.sha }}"
        fi
        
        # Check for changes in each service directory
        if git diff --name-only $COMPARE_RANGE | grep -q '^service1/'; then
          CHANGED_SERVICES="$CHANGED_SERVICES service1"
          echo "✓ service1 has changes"
        fi
        
        if git diff --name-only $COMPARE_RANGE | grep -q '^service2/'; then
          CHANGED_SERVICES="$CHANGED_SERVICES service2"
          echo "✓ service2 has changes"
        fi
        
        # Trim leading whitespace
        CHANGED_SERVICES=$(echo $CHANGED_SERVICES | xargs)
        
        echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV
        echo "Changed services: '$CHANGED_SERVICES'"

    - name: Build both
      run: |
        docker compose up --build -d

    - name: Run python tests
      run: |
        pytest tests/unit
        pytest tests/integration


    - name: Push to Dockerhub
      if: env.CHANGED_SERVICES != ''
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

        if [[ "$CHANGED_SERVICES" == *"service1"* ]]; then
          cd service1
          VERSION_SERVICE1=$(semantic-release version --print)
          semantic-release version --no-push
          docker tag jetpans/avl-services:service1-latest jetpans/avl-services:service1-${VERSION_SERVICE1}
          docker push jetpans/avl-services:service1-${VERSION_SERVICE1}
          cd ..
        fi
        if [[ "$CHANGED_SERVICES" == *"service2"* ]]; then
          cd service2
          VERSION_SERVICE2=$(semantic-release version --print)
          semantic-release version --no-push
          docker tag jetpans/avl-services:service2-latest jetpans/avl-services:service2-${VERSION_SERVICE2}
          docker push jetpans/avl-services:service2-${VERSION_SERVICE2}
          cd ..
        fi

        git push origin main --follow-tags

    
    - name: Cleanup
      if : always()
      run: |
        docker compose down
