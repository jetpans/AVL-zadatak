on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Detect changed services
      id: changes
      run: |
        CHANGED_SERVICES=""
        
        # Always compare current commit to previous commit
        # Handle the case where there might be no previous commit
        if git rev-parse --verify ${{ github.sha }}^ >/dev/null 2>&1; then
          echo "Comparing ${{ github.sha }}^ to ${{ github.sha }}"
          COMPARE_RANGE="${{ github.sha }}^..${{ github.sha }}"
        else
          # First commit, compare against empty tree
          echo "First commit detected, comparing against empty tree"
          COMPARE_RANGE="4b825dc642cb6eb9a060e54bf8d69288fbee4904..${{ github.sha }}"
        fi
        
        # Check for changes in each service directory
        if git diff --name-only $COMPARE_RANGE | grep -q '^service1/'; then
          CHANGED_SERVICES="$CHANGED_SERVICES service1"
          echo "✓ service1 has changes"
        fi
        
        if git diff --name-only $COMPARE_RANGE | grep -q '^service2/'; then
          CHANGED_SERVICES="$CHANGED_SERVICES service2"
          echo "✓ service2 has changes"
        fi
        
        # Trim leading whitespace
        CHANGED_SERVICES=$(echo $CHANGED_SERVICES | xargs)
        
        echo "CHANGED_SERVICES=$CHANGED_SERVICES" >> $GITHUB_ENV
        echo "Changed services: '$CHANGED_SERVICES'"

    - name: Get version id (latest commit SHA)
      id: version
      run: |
        VERSION=$(git rev-parse --short HEAD)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Using version: $VERSION"

    - name: Build both
      run: |
        docker compose up --build -d

    - name: Run python tests
      run: |
        pip install -r requirements.txt
        pytest tests/unit
        pytest tests/integration

    - name: Push to Dockerhub
      if: env.CHANGED_SERVICES != ''
      run: |
        echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

        for SERVICE in $CHANGED_SERVICES; do

          docker push jetpans/avl-services:${SERVICE}-${VERSION}
        done
    - name: Cleanup
      if : always()
      run: |
        docker compose down
